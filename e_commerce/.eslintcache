[{"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\index.js":"1","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\App.js":"2","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\Products.jsx":"3","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\product\\Product.jsx":"4","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\product\\Style.js":"5","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\index.js":"6","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\navbar\\Navbar.jsx":"7","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\navbar\\Styles.js":"8","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\Styles.js":"9","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\lib\\Commerce.js":"10","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\lib\\commerce.js":"11","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\Cart.jsx":"12","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\Checkout.jsx":"13","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\Styles.js":"14","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\PaymentForm.jsx":"15","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\cartitem\\CartItem.jsx":"16","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\AddressForm.jsx":"17","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\Review.jsx":"18","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\CustomTextField.jsx":"19","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\cartitem\\styles.js":"20","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\Styles.js":"21"},{"size":434,"mtime":1609576303236,"results":"22","hashOfConfig":"23"},{"size":2616,"mtime":1609908665118,"results":"24","hashOfConfig":"23"},{"size":765,"mtime":1609783027265,"results":"25","hashOfConfig":"23"},{"size":1383,"mtime":1609813565751,"results":"26","hashOfConfig":"23"},{"size":370,"mtime":1609572498602,"results":"27","hashOfConfig":"23"},{"size":214,"mtime":1609908269109,"results":"28","hashOfConfig":"23"},{"size":1413,"mtime":1609781920267,"results":"29","hashOfConfig":"23"},{"size":1631,"mtime":1609607223065,"results":"30","hashOfConfig":"23"},{"size":298,"mtime":1609608087663,"results":"31","hashOfConfig":"23"},{"size":133,"mtime":1609626952877,"results":"32","hashOfConfig":"23"},{"size":133,"mtime":1609626952877,"results":"33","hashOfConfig":"23"},{"size":1904,"mtime":1609773535643,"results":"34","hashOfConfig":"23"},{"size":3372,"mtime":1609908790410,"results":"35","hashOfConfig":"23"},{"size":597,"mtime":1609751275367,"results":"36","hashOfConfig":"23"},{"size":2466,"mtime":1609907829010,"results":"37","hashOfConfig":"23"},{"size":1519,"mtime":1609763411984,"results":"38","hashOfConfig":"23"},{"size":4831,"mtime":1609908538346,"results":"39","hashOfConfig":"23"},{"size":912,"mtime":1609907889174,"results":"40","hashOfConfig":"23"},{"size":557,"mtime":1609908191419,"results":"41","hashOfConfig":"23"},{"size":349,"mtime":1609763411984,"results":"42","hashOfConfig":"23"},{"size":1208,"mtime":1609906738459,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"14wnjs4",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\index.js",[],["90","91"],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\App.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\Products.jsx",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\product\\Product.jsx",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\product\\Style.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\index.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\navbar\\Navbar.jsx",["92","93"],"import React from 'react'\r\nimport {AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core'\r\nimport {ShoppingCart} from '@material-ui/icons'\r\nimport useStyles from './Styles'\r\nimport logo from '../../assets/logo512.png'\r\nimport {Link, useLocation} from 'react-router-dom'\r\n\r\nconst Navbar = ({totalItems}) => {\r\n    const classes = useStyles()\r\n    const location = useLocation()\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to='/' varian=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"commerce\" height=\"25px\" className={classes.image}/>\r\n                        Thrift\r\n                    </Typography>\r\n                    <div className={classes.grow}/>\r\n                    {location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                    <IconButton component={Link} to='/cart' aria-label=\"Show cart item\" color=\"inherit\">\r\n                        <Badge badgeContent={totalItems} color=\"secondary\">\r\n                            <ShoppingCart/>\r\n                        </Badge>\r\n                    </IconButton>\r\n                    </div>)}\r\n                </Toolbar>   \r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\navbar\\Styles.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\products\\Styles.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\lib\\Commerce.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\lib\\commerce.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\Cart.jsx",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\Checkout.jsx",["94"],"import React, {useState, useEffect} from 'react'\r\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { commerce } from '../../../lib/commerce';\r\nimport useStyles from './Styles'\r\nimport AddressForm from './AddressForm'\r\nimport PaymentForm from './PaymentForm'\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\nconst Checkout = ({cart, onCaptureCheckout, order,error}) => {\r\n    const [checkoutToken, setCheckoutToken] = useState(null)\r\n    const [activeStep, setActiveStep] = useState(0)\r\n    const [shippingData, setShippingData] = useState({});\r\n    const classes = useStyles()\r\n    const history = useHistory();\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep)=> prevActiveStep + 1)\r\n    const backStep = () => setActiveStep((prevActiveStep)=> prevActiveStep - 1)\r\n\r\n    useEffect(() => {\r\n        if (cart.id) {\r\n            const generateToken = async () => {\r\n                try {\r\n                    const token = await commerce.checkout.generateToken(cart.id, {type: 'cart'})\r\n                    setCheckoutToken(token)\r\n                } catch {\r\n                    if (activeStep !== steps.length) history.push('/')\r\n                }\r\n            }\r\n            generateToken()\r\n        }\r\n    }, [cart])\r\n    const test = (data) => {\r\n        shippingData(data)\r\n        nextStep()\r\n    }\r\n\r\n    let Confirmation = () => (order.customer ? (\r\n        <>\r\n        <div>\r\n            <Typography variant=\"h5\">Thank You For Your Purchase, {order.customer.firstname} {order.customer.lastname}</Typography>\r\n            <Divider className={classes.devider}/>\r\n            <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n        </div>\r\n        <br/>\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to='/'>Back Home</Button>\r\n        </>\r\n    ) : (\r\n        <div className={classes.spinner}>\r\n            <CircularProgress/>\r\n        </div>\r\n    ))\r\n    if (error) {\r\n        Confirmation = () => (\r\n            <>\r\n            <Typography variant=\"h5\">Error: {error}</Typography>\r\n            <br/>\r\n            <Button component={Link} variant=\"outlined\" type=\"button\" to='/'>Back to home</Button>\r\n            </>\r\n        )\r\n    }\r\n    const Form = () => (activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test}/>\r\n        : <PaymentForm checkoutToken={checkoutToken} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout}/>)\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <div className={classes.toolbar} />\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n          </Paper>\r\n        </main>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\Styles.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\PaymentForm.jsx",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\cartitem\\CartItem.jsx",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\AddressForm.jsx",["95","96"],"import React, {useState,useEffect} from 'react'\r\nimport { commerce } from '../../../lib/commerce';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({checkoutToken, test}) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n    \r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n      };\r\n\r\n      const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n    \r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n      };\r\n\r\n      const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n    \r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n      };\r\n\r\n      useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);\r\n      }, []);\r\n      \r\n      useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n      }, [shippingCountry]);\r\n    \r\n      useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n      }, [shippingSubdivision]);\r\n    \r\n    return (\r\n        <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"First name\" />\r\n            <FormInput required name=\"lastName\" label=\"Last name\" />\r\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"City\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\Review.jsx",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\CustomTextField.jsx",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\cart\\cartitem\\styles.js",[],"C:\\Users\\User\\Documents\\commerce\\e_commerce\\src\\components\\forms\\checkout\\Styles.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":45,"nodeType":"103","messageId":"104","endLine":2,"endColumn":53},{"ruleId":"101","severity":1,"message":"105","line":2,"column":55,"nodeType":"103","messageId":"104","endLine":2,"endColumn":59},{"ruleId":"106","severity":1,"message":"107","line":33,"column":8,"nodeType":"108","endLine":33,"endColumn":14,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":40,"column":10,"nodeType":"108","endLine":40,"endColumn":12,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":48,"column":10,"nodeType":"108","endLine":48,"endColumn":31,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"125","text":"126"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"127","text":"128"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"129","text":"130"},[1375,1381],"[activeStep, cart, history]",[1799,1801],"[checkoutToken.id]",[2086,2107],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]